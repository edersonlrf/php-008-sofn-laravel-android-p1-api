PHP - SchoolOfNet - Laravel com Android - Parte 1

# Deploy No Heroku.
- Na linha de comando.
    heroku login
- Criando aplicação.
    heroku create php-008-son-lar-and-p1-api
- Criar multi buildpack.
    heroku config:add \
    BUILDPACK_URL=https://github.com/heroku/heroku-buildpack-multi.git
- Editiando buildpack.
    ".buildpack"
        https://github.com/heroku/heroku-buildpack-nodejs
        https://github.com/heroku/heroku-buildpack-php
- Criar arquivo de configuração do ambiente para o Heroku.
    "Procfile"
        web: vendor/bin/heroku-php-apache2 public/
- Criar no Heroku, na pagina de configs da app, as variaveis de ambiente para a base de dados.
        - Tmb Adicionar o Add-ons para o banco de dados.
            Heroku Postgres
        - Configurar as variaveis do ".env" no Heroku.
- Subir arquivos para o Heroku.
    git add .
    git commit -m "deploy"
    git remote -v
    git push heroku master
- Conferir os logs de deploy.
    heroku logs --tail

# Anotações
- Servidor.
    php -S localhost:1337 -t public public\index.php
    ou
    php artisan serve --port=1337
- Introdução.
    Criando novo projeto laravel.
        composer create-project --prefer-dist laravel/laravel:5.3.* php-008-son-laravel-android
- Alterando namespace da aplicação.
    php artisan app:name SON
- Integração com JWT.
    - Instalação:
        composer require tymon/jwt-auth:0.5.9
    - Configurar e publicar o provider.
        php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\JWTAuthServiceProvider"
    - Gerar a chave.
        php artisan jwt:generate
- Gerando token JWT.
    - Criando uma seeder para teste.
        php artisan make:seeder UsersTableSeeder
    - Criar uma base de dados no SQLite.
        touch database\database.sqlite
    - Rodando as migrations e seeders.
        php artisan migrate:refresh --seed
    - Enviando requisição com o Postman.
        http://localhost:1337/api/login
        - Headers:
            Accept = application/json
            Content-Type = application/json
        - Body (raw)
            {
                "email" : "admin@schoolofnet.com",
                "password" : "secret"
            }
- Iniciando com repositories.
    - Instalação.
        composer require prettus/l5-repository:2.6.6
    - Publicar.
        php artisan vendor:publish --provider="Prettus\Repository\Providers\RepositoryServiceProvider"
- Criando repositorio para categorias.
    - Criando entidade.
        php artisan make:entity Category
    - Criando seeder.
        php artisan make:seeder CategoriesTableSeeder
- Listando categorias.
    - Listando as rotas da aplicação.
        php artisan route:list
    - Atualizar migrações e seeders.
        php artisan migrate:refresh --seed
- Criando repositório para contas a pagar.
    - Criando migration e seeder.
        php artisan make:entity BillPay
        php artisan make:seeder BillPaysTableSeeder
        php artisan migrate:refresh --seed
    - Acessando o banco de dados.
        sqlite3 database/database.sqlite
- CRUD de contas a pagar.
    - Atualizar migrations e seeders.
        php artisan migrate:refresh --seed
- Registrando usuários.
    - Criar repositório.
        php artisan make:repository User
    - Criar controller.
        php artisan make:controller Api/UsersController
    - Criar request.
        php artisan make:request UserRequest
- Introdução ao Multitenancy.
    - Atualizar migrations e seeders.
        php artisan migrate:refresh --seed
    - Instalando o Landlord.
        composer require hipsterjazzbo/landlord:2.0
    - Publicar.
         php artisan vendor:publish --provider="HipsterJazzbo\Landlord\LandlordServiceProvider"
- Testando Multitenancy.
    - Criando middleware.
        php artisan make:middleware TenantMiddleware
- Iniciando com fractal.
    - Instalação.
        composer require league/fractal
- Documentação de API com Swagger.
    - Instalação.
        composer require "darkaonline/l5-swagger:~3.0"
    - Publicar.
        php artisan l5-swagger:publish
    - Acessar.
        http://localhost:1337/api/documentation
- Configurando CORS.
    - Instalação.
        composer require barryvdh/laravel-cors:0.8.2
    - Publicar.
         php artisan vendor:publish --provider="Barryvdh\Cors\ServiceProvider"
